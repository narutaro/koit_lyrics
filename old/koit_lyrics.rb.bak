#!/usr/bin/ruby

require 'rubygems'
require 'hpricot'
require 'open-uri'

url = "http://koit.tunegenie.com/onair/"

n = 0 # number of main loops
m = 0 # current total sleep time 
sleepTime = 15

loop do

	n = n + 1 

	puts "[#{n}]: #{Time.at(Time.now)}"

	songs = []
	songAttr = {}

	open(url){|f|
		f.each_line{|row|
			row.chomp!
			if /slot_id:\"(.*)\"/ =~ row
				songAttr["slot_id"] = Time.at($1[0..9].to_i)
			elsif /length:(.*)/ =~ row
				songAttr["length"] = $1
			elsif /artistName:\"(.*)\"/ =~ row
				songAttr["artistName"] = $1
			elsif /artistSlug:\"(.*)\"/ =~ row
				songAttr["artistSlug"] = $1
			elsif /trackSlug:\"(.*)\"/ =~ row
				songAttr["trackSlug"] = $1
			elsif /trackName:\"(.*)\"/ =~ row
				songAttr["trackName"] = $1
			elsif /albumName:\"(.*)\"/ =~ row
				songAttr["albumName"] = $1
			elsif /albumSlug:\"(.*)\"/ =~ row
				songAttr["albumSlug"] = $1
			elsif /altitem:(.*)/ =~ row
				songAttr["altitem"] = $1
				songs << songAttr
				songAttr = {}
			else
			end
		}
	}

	currentSong = songs.pop
	startTime = currentSong["slot_id"].to_i
	playTime = currentSong["length"].to_i
	endTime = startTime + playTime
	now = Time.new.to_i
	adjustment = 8
	timeUntilNextSong = endTime - now + adjustment

	if timeUntilNextSong > 0

		puts "--------------------------------------------------------------------------------"
		puts ""
		puts "  Play from      : #{currentSong["slot_id"]}"
		puts "  Ends at        : #{Time.at(endTime)}"
		puts "  Artist Name    : #{currentSong["artistName"]}"
		puts "  Track Name     : #{currentSong["trackName"]}"
		puts "  Alubum Name    : #{currentSong["albumName"]}"

		lyrics_url = "http://koit.tunegenie.com/music/#{currentSong["artistSlug"]}/_/#{currentSong["trackSlug"]}/+lyrics/"
		doc = Hpricot(open(lyrics_url).read)
		#p (doc/"div#lyrictext").to_s.delete("\r\n").gsub(/<\/?[^>]*>/, "")

		puts "\n"
		#puts (doc/"div#lyrictext").to_s.gsub(/<\/?[^>]*>/, "")
		# original (doc/"div#lyrictext").to_s.gsub(/<\/?[^>]*>/, "").each{|line|
		#(doc/"div#lyrictext").each{|block|
		p (doc/"div#lyrictext").class
		(doc/"div#lyrictext").each_line{|block|
			p block
			puts block.class
			puts "i am here"
=begin
			block.to_a.each{|line|
				#if /([a-z][A-Z])/ =~ line
				#	puts line.gsub(/([a-z][A-Z])/, "#{$1[0,1]}--#{$1[1,1]}")
				#else
				puts "  *  #{line.to_s.gsub(/<\/?[^>]*>/, "")}"
				#end
				sleep 1
			}
=end
		}
		puts ""
		sleep timeUntilNextSong

	else

		m = m + sleepTime
		puts "[#{m}]: Waiting for next song. #{m}sec"
		sleep sleepTime

	end

end
